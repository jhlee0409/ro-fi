name: AI Story Generation Pipeline

on:
  schedule:
    # Gemini API 트래픽 분산: 시간대별 백업 실행
    - cron: '0 1 * * *' # 01:00 UTC (KST 10:00) - 메인 시간
    - cron: '30 2 * * *' # 02:30 UTC (KST 11:30) - 백업 실행
    - cron: '0 4 * * *' # 04:00 UTC (KST 13:00) - 최종 백업

  workflow_dispatch: # 수동 실행 허용
    inputs:
      force_mode:
        description: '강제 실행 모드 (에러 무시)'
        required: false
        default: false
        type: boolean

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: 체크아웃 코드
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: pnpm 환경 설정
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Node.js 환경 설정
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 의존성 설치
        run: |
          echo "pnpm으로 의존성 설치 중..."
          pnpm install --no-frozen-lockfile
          echo "설치 완료"

      - name: API 키 확인
        run: |
          echo "API 키 상태 확인"
          if [ -n "${{ secrets.GEMINI_API_KEY }}" ]; then
            echo "GEMINI_API_KEY 설정됨"
          else
            echo "GEMINI_API_KEY 없음"
            echo "GitHub Secrets에 GEMINI_API_KEY를 설정해주세요"
            exit 1
          fi

      - name: Gemini AI 로맨스 판타지 자동 생성
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "Gemini AI를 사용한 로맨스 판타지 자동 생성 시작"

          # Gemini API 스크립트 실행
          node scripts/gemini-story-generator.js

          echo "Gemini AI 생성 완료"

      - name: 생성 결과 확인 및 배포
        if: always()
        run: |
          echo "로맨스 판타지 자동 연재 확인"

          # 최신 커밋 정보 확인
          latest_commit=$(git log -1 --oneline)
          echo "최신 커밋: $latest_commit"

          # 새로 생성된 파일들 확인
          new_novels=$(find src/content/novels/ -name "*.md" -newer .git/COMMIT_EDITMSG 2>/dev/null || echo "")
          new_chapters=$(find src/content/chapters/ -name "*.md" -newer .git/COMMIT_EDITMSG 2>/dev/null || echo "")

          if [ -n "$new_novels" ] || [ -n "$new_chapters" ]; then
            echo "새 콘텐츠 생성 확인됨"

            if [ -n "$new_novels" ]; then
              echo "새 소설: $new_novels"
            fi

            if [ -n "$new_chapters" ]; then
              echo "새 챕터: $new_chapters"

              # 가장 최근 챕터의 글자 수 확인
              latest_chapter=$(echo "$new_chapters" | head -1)
              if [ -f "$latest_chapter" ]; then
                char_count=$(wc -m < "$latest_chapter" | tr -d ' ')
                echo "챕터 글자 수: $char_count"

                if [ "$char_count" -ge 3000 ] && [ "$char_count" -le 6000 ]; then
                  echo "적절한 분량"
                else
                  echo "분량 확인 필요"
                fi
              fi
            fi
          else
            echo "새 콘텐츠가 생성되지 않았을 수도 있음 (정상 동작일 수 있음)"
          fi

          # 전체 연재 현황 요약
          total_novels=$(find src/content/novels/ -name "*.md" | wc -l)
          total_chapters=$(find src/content/chapters/ -name "*.md" | wc -l)
          echo "전체 현황: 소설 ${total_novels}편, 챕터 ${total_chapters}화"

          echo "자동 배포 완료"

      - name: 실행 완료 요약
        if: always()
        run: |
          echo ""
          echo "=========================================="
          echo "AI 로맨스 판타지 자동 연재 완료"
          echo "=========================================="
          echo ""
          echo "실행 시간: $(date '+%Y-%m-%d %H:%M:%S KST')"
          echo "강제 모드: ${{ github.event.inputs.force_mode || 'false' }}"
          echo "AI 엔진: Gemini AI"
          echo ""

          # 총 현황
          total_novels=$(find src/content/novels/ -name "*.md" | wc -l)
          total_chapters=$(find src/content/chapters/ -name "*.md" | wc -l)
          echo "전체 현황:"
          echo "  소설: ${total_novels}편"
          echo "  챕터: ${total_chapters}화"
          echo ""

          # 링크
          echo "유용한 링크:"
          echo "  웹사이트: https://ro-fi.vercel.app"
          echo "  소설 목록: https://github.com/${{ github.repository }}/tree/main/src/content/novels"
          echo "  챕터 목록: https://github.com/${{ github.repository }}/tree/main/src/content/chapters"
          echo ""
          echo "Gemini AI 자동 연재 시스템 완료!"
          echo "최고 품질의 로맨스 판타지를 선사합니다"
