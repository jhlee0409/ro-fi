# 디지털 소울메이트 자동 연재 시스템
name: AI Story Generation Pipeline

on:
  schedule:
    # 매일 새벽 2시 (KST 11시) 새 챕터 자동 생성 및 연재
    - cron: "0 2 * * *" # 02:00 UTC (KST 11:00)
  workflow_dispatch: # 수동 실행 허용

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: |
          echo "📦 의존성 설치 중..."
          # lockfile 호환성 문제 해결
          pnpm install --no-frozen-lockfile
          # PATH에 node_modules/.bin 추가
          echo "$PWD/node_modules/.bin" >> $GITHUB_PATH
          
      - name: 🚀 Execute Master Automation Engine
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "📱 Starting Digital Soulmate Automation..."
          node scripts/run-automation.js --verbose
          
      - name: AI Story Creation with Claude Code (Fallback)
        if: failure()
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          direct_prompt: |
            # 🌹 완전 자율형 로맨스 판타지 연재 시스템 v4.0

            당신은 최고의 로맨스 판타지 전문 작가입니다. 현재 연재 상황을 완전히 분석하고, 적절한 액션을 자동으로 결정해서 실행하세요.

            ## 🔍 1단계: 전체 연재 상황 완전 스캔

            ### A. 모든 소설과 챕터 완전 조사
            ```bash
            # 모든 소설 파일 확인
            find src/content/novels/ -name "*.md" -exec echo "=== 소설: {} ===" \; -exec cat {} \;

            # 모든 챕터 파일 확인  
            find src/content/chapters/ -name "*.md" -exec echo "=== 챕터: {} ===" \; -exec cat {} \;

            # 파일 개수 확인
            echo "총 소설 개수: $(find src/content/novels/ -name "*.md" | wc -l)"
            echo "총 챕터 개수: $(find src/content/chapters/ -name "*.md" | wc -l)"
            ```

            ### B. 스마트 액션 결정 로직
            위 스캔 결과를 바탕으로 다음 우선순위로 액션을 결정하세요:

            **우선순위 1: 완결 처리** (조건: 소설이 60화 이상이고 스토리가 완결 가능한 상태)
            - 해당하는 소설이 있으면 → **완결 처리 실행**
            - 완결 에필로그 추가 및 상태를 "완결"로 변경

            **우선순위 2: 기존 소설 챕터 추가** (조건: 연재 중인 소설이 있음)
            - 가장 최근에 업데이트된 소설의 다음 챕터 생성
            - 완벽한 연속성으로 스토리 이어가기

            **우선순위 3: 새 소설 시작** (조건: 연재 중인 소설이 없거나 1개뿐)
            - 완전히 새로운 독창적 로맨스 판타지 소설 시작
            - 트렌디한 설정과 매력적인 캐릭터로 구성

            ## ✍️ 2단계: 결정된 액션 완벽 실행

            ### 📝 **NOVEL_MARKDOWN_FORMAT.md 철저 준수**:

            #### A. 대화체: `> "내용"`
            #### B. 독백: `> _'내용'_`  
            #### C. 액션: `> [상황 설명]`
            #### D. 서술: **인물명**, **장소명** 볼드 처리
            #### E. 장면 전환: `---` 구분선

            ### 액션별 상세 가이드:

            #### 🎉 완결 처리 시:
            - 파일명: `[소설슬러그]-ch[마지막화].md`
            - 제목: "에필로그" 또는 "완결"
            - 내용: 감동적인 결말 + 해피엔딩 (3,000-4,000자)
            - 소설 메타데이터 status를 "완결"로 변경

            #### 📖 챕터 추가 시:
            - 기존 챕터들을 모두 읽고 완벽한 연속성 유지
            - 캐릭터 일관성과 플롯 진행 자연스럽게
            - 3,500-4,500자 분량
            - 다음 화가 궁금한 클리프행어 포함

            #### ✨ 새 소설 시작 시:
            - 2025년 트렌드 반영한 독창적 소재
            - 매력적인 남녀 주인공과 명확한 갈등 구조  
            - 1화는 4,000-5,000자로 임팩트 있게
            - 소설 메타데이터 파일도 함께 생성

            ## 📝 3단계: 파일 생성 및 메타데이터 관리

            ### A. 정확한 파일명과 메타데이터:
            ```yaml
            ---
            title: "감정을 자극하는 제목"
            novel: "정확한-슬러그"
            chapterNumber: [정확한 번호]
            publishedDate: "2025-01-24"
            contentRating: "15+"
            wordCount: [실제 글자 수]
            ---
            ```

            ### B. 소설 메타데이터 정확히 업데이트:
            - totalChapters 증가
            - status 필요시 변경
            - publishedDate 업데이트

            ## 🚀 4단계: Git 커밋

            ```bash
            git add src/content/novels/ src/content/chapters/
            git commit -m "🌹 자동 연재: [액션 설명]

            [상세 내용 설명]

            📊 품질점수: [점수]/10  
            📈 총 연재 현황: [현황]
            🤖 AI 완전 자동 생성"
            git push origin main
            ```

            ## 🎯 지금 실행하세요:

            1. 위의 bash 명령어로 전체 상황 스캔
            2. 우선순위 로직에 따라 액션 결정  
            3. 해당 액션을 완벽하게 실행
            4. 메타데이터 정확히 업데이트
            5. Git 커밋 및 푸시

            **완전 자율적으로 판단하고 실행하세요!** 🚀


          allowed_tools: "str_replace_based_edit_tool,bash"

      - name: Verify Generation and Deploy
        run: |
          echo "🌹 로맨스 판타지 자동 연재 확인"

          # 최신 커밋 정보 확인
          latest_commit=$(git log -1 --oneline)
          echo "최신 커밋: $latest_commit"

          # 새로 생성된 파일들 확인
          new_novels=$(find src/content/novels/ -name "*.md" -newer .git/COMMIT_EDITMSG 2>/dev/null || echo "")
          new_chapters=$(find src/content/chapters/ -name "*.md" -newer .git/COMMIT_EDITMSG 2>/dev/null || echo "")
          
          if [ -n "$new_novels" ] || [ -n "$new_chapters" ]; then
            echo "✅ 새 콘텐츠 생성 확인됨"
            
            if [ -n "$new_novels" ]; then
              echo "📚 새 소설: $new_novels"
            fi
            
            if [ -n "$new_chapters" ]; then
              echo "📖 새 챕터: $new_chapters"
              
              # 가장 최근 챕터의 글자 수 확인  
              latest_chapter=$(echo "$new_chapters" | head -1)
              if [ -f "$latest_chapter" ]; then
                char_count=$(wc -m < "$latest_chapter" | tr -d ' ')
                echo "📊 챕터 글자 수: $char_count"
                
                if [ "$char_count" -ge 3000 ] && [ "$char_count" -le 6000 ]; then
                  echo "✅ 적절한 분량"
                else
                  echo "⚠️ 분량 확인 필요"
                fi
              fi
            fi
          else
            echo "⚠️ 새 콘텐츠가 생성되지 않았을 수도 있음 (정상 동작일 수 있음)"
          fi

          # 전체 연재 현황 요약
          total_novels=$(find src/content/novels/ -name "*.md" | wc -l)
          total_chapters=$(find src/content/chapters/ -name "*.md" | wc -l)
          echo "📈 전체 현황: 소설 ${total_novels}편, 챕터 ${total_chapters}화"

          echo "🚀 자동 배포 완료"
