---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import '../../styles/globals.css';

// URL에서 slug 파라미터 가져오기
export async function getStaticPaths() {
  const novels = await getCollection('novels');
  console.log('Available novels:', novels.map(n => ({ slug: n.slug, title: n.data.title })));

  return novels.map(novel => ({
    params: { slug: novel.slug },
    props: { novel },
  }));
}

const { novel } = Astro.props;
const { slug } = Astro.params;

// 만약 getStaticPaths에서 novel을 전달받지 못했다면, 직접 불러오기
let currentNovel = novel;
if (!currentNovel) {
  const novels = await getCollection('novels');
  const foundNovel = novels.find(n => n.slug === slug);
  if (!foundNovel) {
    throw new Error(`Novel not found for slug: ${slug}`);
  }
  currentNovel = foundNovel;
}

// 해당 소설의 챕터들 가져오기
const chapters = await getCollection('chapters');
const novelChapters = chapters
  .filter(chapter => chapter.data.novel === slug)
  .sort((a, b) => a.data.chapterNumber - b.data.chapterNumber);

// 통계 계산
const latestChapter = novelChapters.length > 0 ? Math.max(...novelChapters.map(ch => ch.data.chapterNumber)) : 0;
const totalWords = novelChapters.reduce((sum, chapter) => sum + (chapter.data.wordCount || 1000), 0);
const avgRating = novelChapters.length > 0 ?
  (novelChapters.reduce((sum, chapter) => sum + (chapter.data.rating || 0), 0) / novelChapters.length).toFixed(1) :
  (currentNovel.data.rating || 0).toString();
const lastUpdate = novelChapters.length > 0 ?
  new Date(Math.max(...novelChapters.map(ch => new Date(ch.data.publicationDate).getTime()))) :
  currentNovel.data.publishedDate || new Date();

// 최신 3개 챕터
const latestChapters = novelChapters.slice(-3).reverse();

---

<Layout title={`${currentNovel.data.title} | RO-FAN`}>
  <!-- Hero Section - Modern 2025 Design -->
  <section class="relative min-h-[60vh] flex items-center bg-gradient-to-b from-stone-50 to-white overflow-hidden">
    <!-- Background Pattern -->
    <div class="absolute inset-0">
      <div class="absolute top-0 left-1/4 w-96 h-96 bg-rose-200 rounded-full mix-blend-multiply filter blur-3xl opacity-10"></div>
      <div class="absolute bottom-0 right-1/4 w-96 h-96 bg-ink-200 rounded-full mix-blend-multiply filter blur-3xl opacity-10"></div>
    </div>

    <!-- Content -->
    <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-12 items-center">
        <!-- Novel Cover with AI-Generated Image -->
        <div class="lg:col-span-1 flex justify-center">
          <div class="relative group">
            <!-- Novel Cover -->
            <div class="aspect-[3/4] w-80 bg-gradient-to-br from-rose-100 to-ink-100 rounded-3xl shadow-modern overflow-hidden">
              {currentNovel.data.coverImage ? (
                <img
                  src={currentNovel.data.coverImage}
                  alt={currentNovel.data.title}
                  class="w-full h-full object-cover"
                />
              ) : (
                <div class="w-full h-full flex items-center justify-center">
                  <span class="text-7xl font-display font-bold bg-gradient-to-br from-rose-400 to-ink-600 bg-clip-text text-transparent">
                    {currentNovel.data.title[0]}
                  </span>
                </div>
              )}
            </div>
            
            <!-- Status Badge -->
            <div class="absolute top-4 left-4 z-10">
              <span class={`inline-flex items-center px-4 py-2 rounded-full text-sm font-medium backdrop-blur-sm ${
                currentNovel.data.status === '연재 중'
                  ? 'bg-teal-500/90 text-white'
                  : currentNovel.data.status === '완결'
                  ? 'bg-ink-600/90 text-white'
                  : 'bg-stone-500/90 text-white'
              }`}>
                {currentNovel.data.status}
              </span>
            </div>
            
          </div>
        </div>

        <!-- Novel Info -->
        <div class="lg:col-span-2 space-y-6">
          <!-- Title and Author -->
          <div>
            <h1 class="text-4xl sm:text-5xl lg:text-6xl font-display font-bold text-ink-900 mb-4 leading-tight">
              {currentNovel.data.title}
            </h1>
            <p class="text-xl text-stone-600 mb-2 font-medium">by {currentNovel.data.author}</p>
            <p class="text-lg text-stone-700 leading-relaxed">
              {currentNovel.data.summary}
            </p>
          </div>

          <!-- Stats Cards -->
          <div class="grid grid-cols-2 sm:grid-cols-4 gap-4">
            <div class="bg-white border border-stone-200 rounded-2xl p-4 text-center">
              <div class="text-2xl font-display font-bold text-ink-900 mb-1">{novelChapters.length}</div>
              <div class="text-sm text-stone-600">총 챕터</div>
            </div>
            <div class="bg-white border border-stone-200 rounded-2xl p-4 text-center">
              <div class="text-2xl font-display font-bold text-ink-900 mb-1">{Math.round(totalWords / 1000)}K</div>
              <div class="text-sm text-stone-600">총 단어</div>
            </div>
            <div class="bg-white border border-stone-200 rounded-2xl p-4 text-center">
              <div class="text-2xl font-display font-bold text-ink-900 mb-1">⭐ {avgRating}</div>
              <div class="text-sm text-stone-600">평균 평점</div>
            </div>
            <div class="bg-white border border-stone-200 rounded-2xl p-4 text-center">
              <div class="text-2xl font-display font-bold text-ink-900 mb-1">{latestChapter}</div>
              <div class="text-sm text-stone-600">최신 화</div>
            </div>
          </div>

          <!-- Trope Tags -->
          <div class="flex flex-wrap gap-3">
            {currentNovel.data.tropes?.map((trope) => (
              <span class="inline-flex items-center px-4 py-2 rounded-xl text-sm font-medium bg-rose-50 text-rose-700 border border-rose-100">
                {trope}
              </span>
            ))}
          </div>

          <!-- Action Buttons -->
          <div class="flex flex-col sm:flex-row gap-4">
            {novelChapters.length > 0 ? (
              <>
                <a
                  href={`/novels/${slug}/chapter/1`}
                  class="inline-flex items-center justify-center px-8 py-4 bg-ink-900 hover:bg-ink-950 text-white rounded-2xl font-semibold text-lg transition-all duration-300 shadow-modern hover:shadow-glow"
                >
                  <span class="mr-2">📖</span>
                  처음부터 읽기
                </a>
                <a
                  href={`/novels/${slug}/chapter/${latestChapter}`}
                  class="inline-flex items-center justify-center px-8 py-4 bg-white border-2 border-ink-200 hover:border-ink-400 text-ink-900 rounded-2xl font-semibold text-lg transition-all duration-300"
                >
                  <span class="mr-2">⚡</span>
                  최신 화 읽기
                </a>
              </>
            ) : (
              <div class="inline-flex items-center justify-center px-8 py-4 bg-stone-200 text-stone-500 rounded-2xl font-semibold text-lg cursor-not-allowed">
                <span class="mr-2">⏳</span>
                곧 연재 시작
              </div>
            )}
          </div>

          <!-- Update Info -->
          <div class="flex items-center space-x-2 text-sm text-stone-500">
            <div class="w-2 h-2 bg-teal-500 rounded-full animate-pulse"></div>
            <span>마지막 업데이트: {lastUpdate.toLocaleDateString('ko-KR')}</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Chapter List Section -->
  <section class="py-20 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Section Header -->
      <div class="text-center mb-16">
        <h2 class="text-3xl sm:text-4xl font-display font-bold text-ink-900 mb-4">
          챕터 목록
        </h2>
        <p class="text-xl text-stone-600 max-w-2xl mx-auto">
          모든 에피소드를 만나보세요
        </p>
      </div>

      {novelChapters.length === 0 ? (
        <!-- Empty State -->
        <div class="text-center py-16">
          <div class="inline-flex items-center justify-center w-20 h-20 bg-stone-100 rounded-full mb-6">
            <span class="text-4xl">📝</span>
          </div>
          <h3 class="text-2xl font-display font-semibold text-ink-900 mb-4">첫 번째 챕터를 준비 중입니다</h3>
          <p class="text-stone-600 mb-8">곧 만나보실 수 있습니다!</p>
          <div class="flex items-center justify-center space-x-3 text-rose-600">
            <div class="w-2 h-2 bg-rose-600 rounded-full animate-pulse"></div>
            <span class="text-sm font-medium">매일 업데이트</span>
          </div>
        </div>
      ) : (
        <!-- Chapter Grid -->
        <div class="space-y-8">
          <!-- Latest Chapters -->
          {latestChapters.length > 0 && (
            <div class="mb-12">
              <h3 class="text-2xl font-display font-bold text-ink-900 mb-6">
                최신 업데이트
              </h3>
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {latestChapters.map((chapter) => (
                  <div class="group bg-gradient-to-br from-rose-50 to-white border border-rose-100 rounded-2xl p-6 hover:shadow-soft transition-all duration-300">
                    <div class="flex items-start justify-between mb-4">
                      <div class="w-10 h-10 bg-gradient-to-r from-rose-500 to-ink-500 rounded-full flex items-center justify-center text-white text-sm font-bold">
                        {chapter.data.chapterNumber}
                      </div>
                      <span class="text-xs text-rose-600 bg-rose-100 px-2 py-1 rounded-full">
                        NEW
                      </span>
                    </div>

                    <h4 class="text-lg font-display font-bold text-ink-900 mb-2 group-hover:text-rose-600 transition-colors">
                      <a href={`/novels/${slug}/chapter/${chapter.data.chapterNumber}`} class="block">
                        {chapter.data.title}
                      </a>
                    </h4>

                    {chapter.data.summary && (
                      <p class="text-stone-600 text-sm leading-relaxed mb-4 line-clamp-3">
                        {chapter.data.summary}
                      </p>
                    )}

                    <div class="flex items-center justify-between text-xs text-stone-500">
                      <span>{chapter.data.publicationDate.toLocaleDateString('ko-KR')}</span>
                      <span>{chapter.data.wordCount || 1000}자</span>
                    </div>

                    <div class="mt-4">
                      <a
                        href={`/novels/${slug}/chapter/${chapter.data.chapterNumber}`}
                        class="w-full inline-flex items-center justify-center px-4 py-2 bg-ink-900 hover:bg-ink-950 text-white rounded-xl text-sm font-medium transition-all duration-200"
                      >
                        지금 읽기
                      </a>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          <!-- All Chapters -->
          <div>
            <h3 class="text-2xl font-display font-bold text-ink-900 mb-6">
              전체 챕터 ({novelChapters.length}화)
            </h3>

            <!-- Sort Options -->
            <div class="flex items-center justify-between mb-6">
              <div class="text-sm text-stone-600">
                총 {novelChapters.length}개의 챕터
              </div>
              <div class="flex items-center space-x-2">
                <button class="sort-btn active px-3 py-1 text-sm rounded-full bg-ink-900 text-white" data-sort="asc">
                  오름차순
                </button>
                <button class="sort-btn px-3 py-1 text-sm rounded-full bg-stone-100 text-stone-700 hover:bg-stone-200" data-sort="desc">
                  내림차순
                </button>
              </div>
            </div>

            <!-- Chapter List -->
            <div class="space-y-3" id="chapters-list">
              {novelChapters.map((chapter) => (
                <div
                  class="chapter-item group bg-white rounded-2xl p-6 border border-stone-200 hover:border-rose-200 hover:shadow-soft transition-all duration-300"
                  data-chapter={chapter.data.chapterNumber}
                >
                  <div class="flex items-center justify-between">
                    <div class="flex-1">
                      <div class="flex items-center space-x-4 mb-2">
                        <div class="w-8 h-8 bg-gradient-to-r from-rose-500 to-ink-500 rounded-full flex items-center justify-center text-white text-sm font-bold">
                          {chapter.data.chapterNumber}
                        </div>
                        <div>
                          <h4 class="text-lg font-display font-semibold text-ink-900 group-hover:text-rose-600 transition-colors">
                            <a href={`/novels/${slug}/chapter/${chapter.data.chapterNumber}`}>
                              {chapter.data.title}
                            </a>
                          </h4>
                          <div class="flex items-center space-x-4 text-sm text-stone-500">
                            <span>📅 {chapter.data.publicationDate.toLocaleDateString('ko-KR')}</span>
                            <span>📝 {chapter.data.wordCount || 1000}자</span>
                            {chapter.data.rating && (
                              <span>⭐ {chapter.data.rating}</span>
                            )}
                          </div>
                        </div>
                      </div>

                      {chapter.data.summary && (
                        <p class="text-stone-600 text-sm leading-relaxed ml-12 line-clamp-2">
                          {chapter.data.summary}
                        </p>
                      )}
                    </div>

                    <div class="flex items-center space-x-3">
                      <a
                        href={`/novels/${slug}/chapter/${chapter.data.chapterNumber}`}
                        class="inline-flex items-center px-4 py-2 bg-ink-900 hover:bg-ink-950 text-white rounded-xl text-sm font-medium transition-all duration-200"
                      >
                        읽기
                      </a>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}
    </div>
  </section>

  <!-- Novel Info Detail Section -->
  <section class="py-20 bg-gradient-to-b from-stone-50 to-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
        <!-- Work Info -->
        <div class="space-y-8">
          <div>
            <h3 class="text-2xl font-display font-bold text-ink-900 mb-4">작품 정보</h3>
            <div class="bg-white rounded-2xl p-6 shadow-soft border border-stone-100">
              <dl class="space-y-4">
                <div class="flex justify-between">
                  <dt class="text-sm font-medium text-stone-500">장르</dt>
                  <dd class="text-sm text-ink-900 font-medium">로맨스 판타지</dd>
                </div>
                <div class="flex justify-between">
                  <dt class="text-sm font-medium text-stone-500">연재 상태</dt>
                  <dd class="text-sm text-ink-900 font-medium">{currentNovel.data.status}</dd>
                </div>
                <div class="flex justify-between">
                  <dt class="text-sm font-medium text-stone-500">총 챕터</dt>
                  <dd class="text-sm text-ink-900 font-medium">{novelChapters.length}화</dd>
                </div>
                <div class="flex justify-between">
                  <dt class="text-sm font-medium text-stone-500">총 분량</dt>
                  <dd class="text-sm text-ink-900 font-medium">{Math.round(totalWords / 1000)}K 단어</dd>
                </div>
                <div class="flex justify-between">
                  <dt class="text-sm font-medium text-stone-500">평균 평점</dt>
                  <dd class="text-sm text-ink-900 font-medium">⭐ {avgRating}/10</dd>
                </div>
                <div class="flex justify-between">
                  <dt class="text-sm font-medium text-stone-500">마지막 업데이트</dt>
                  <dd class="text-sm text-ink-900 font-medium">{lastUpdate.toLocaleDateString('ko-KR')}</dd>
                </div>
              </dl>
            </div>
          </div>

          <!-- Romance Trends -->
          <div>
            <h3 class="text-2xl font-display font-bold text-ink-900 mb-4">로맨스 트렌드</h3>
            <div class="bg-white rounded-2xl p-6 shadow-soft border border-stone-100">
              <div class="grid grid-cols-2 gap-4">
                {currentNovel.data.tropes?.map((trope) => (
                  <div class="flex items-center space-x-3 p-3 bg-rose-50 rounded-xl">
                    <div class="w-2 h-2 bg-rose-500 rounded-full"></div>
                    <span class="text-sm font-medium text-rose-900">{trope}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>

        <!-- Quick Action -->
        <div class="space-y-8">
          <div>
            <h3 class="text-2xl font-display font-bold text-ink-900 mb-4">빠른 액션</h3>
            <div class="bg-white rounded-2xl p-6 shadow-soft border border-stone-100">
              <div class="grid grid-cols-2 gap-3">
                <a
                  href="/novels"
                  class="flex items-center space-x-2 p-3 text-stone-700 hover:bg-stone-50 rounded-xl transition-colors"
                >
                  <span>📚</span>
                  <span class="text-sm">전체 소설</span>
                </a>
                <a
                  href="/"
                  class="flex items-center space-x-2 p-3 text-stone-700 hover:bg-stone-50 rounded-xl transition-colors"
                >
                  <span>🏠</span>
                  <span class="text-sm">홈으로</span>
                </a>
                {novelChapters.length > 0 && (
                  <>
                    <a
                      href={`/novels/${slug}/chapter/1`}
                      class="flex items-center space-x-2 p-3 text-stone-700 hover:bg-stone-50 rounded-xl transition-colors"
                    >
                      <span>▶️</span>
                      <span class="text-sm">첫 화</span>
                    </a>
                    <a
                      href={`/novels/${slug}/chapter/${latestChapter}`}
                      class="flex items-center space-x-2 p-3 text-stone-700 hover:bg-stone-50 rounded-xl transition-colors"
                    >
                      <span>⚡</span>
                      <span class="text-sm">최신 화</span>
                    </a>
                  </>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- JavaScript for Chapter Sorting -->
  <script>
    // 정렬 버튼들
    const sortButtons = document.querySelectorAll('.sort-btn');
    const chaptersList = document.getElementById('chapters-list');
    const chapterItems = Array.from(document.querySelectorAll('.chapter-item'));

    // 정렬 함수
    function sortChapters(order: string) {
      const sortedItems = [...chapterItems].sort((a, b) => {
        const aElement = a as HTMLElement;
        const bElement = b as HTMLElement;
        const aNum = parseInt(aElement.dataset.chapter || '0');
        const bNum = parseInt(bElement.dataset.chapter || '0');
        return order === 'asc' ? aNum - bNum : bNum - aNum;
      });

      // DOM에서 제거하고 다시 정렬된 순서로 추가
      chapterItems.forEach(item => item.remove());
      sortedItems.forEach(item => {
        chaptersList?.appendChild(item);
        // 애니메이션 효과
        const itemElement = item as HTMLElement;
        itemElement.style.transform = 'translateY(20px)';
        itemElement.style.opacity = '0';
        setTimeout(() => {
          itemElement.style.transform = 'translateY(0)';
          itemElement.style.opacity = '1';
          itemElement.style.transition = 'all 0.3s ease';
        }, 100);
      });
    }

    // 정렬 버튼 이벤트 리스너
    sortButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        const target = e.target as HTMLElement;
        if (!target) return;

        const order = target.dataset.sort;
        if (!order) return;

        // 활성 버튼 스타일 업데이트
        sortButtons.forEach(btn => {
          const btnElement = btn as HTMLElement;
          btnElement.classList.remove('active', 'bg-ink-900', 'text-white');
          btnElement.classList.add('bg-stone-100', 'text-stone-700');
        });

        target.classList.add('active', 'bg-ink-900', 'text-white');
        target.classList.remove('bg-stone-100', 'text-stone-700');

        sortChapters(order);
      });
    });
  </script>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>